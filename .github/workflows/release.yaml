---
name: Release and sign modules
on:
  push:
    tags: ["*/*"] # semver format

permissions:
  contents: read # needed for checkout
  packages: write # needed for GHCR access
  id-token: write # needed for signing

jobs:
  parseTag:
    runs-on: ubuntu-latest
    outputs:
      module: ${{ steps.module.outputs.module }}
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - id: module
        run: |
          MODULE=$(echo "${{ github.ref_name }}" | sed '/[a-zA-Z\-]\+\/[v]\?[0-9.]\+/!{q100}; {s#/[v]\?[0-9.]\+##}' || (echo "unexpected tag version" && exit 1))
          echo "module=$MODULE" >> "$GITHUB_OUTPUT"
      - id: version
        run: |
          VERSION=$(echo "${{ github.ref_name }}" | sed '/[a-zA-Z\-]\+\/[v]\?[0-9.]\+/!{q100}; {s#[a-zA-Z\-]\+\/[v]\?##}' || (echo "unexpected tag version" && exit 1))
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

  release:
    runs-on: ubuntu-latest
    needs: parseTag
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Cosign
        uses: sigstore/cosign-installer@main
      - name: Setup Timoni
        uses: stefanprodan/timoni/actions/setup@main
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Vet module
        run: |
          timoni mod vet ./${{ needs.parseTag.outputs.module }}
      - name: Push and Sign
        run: |
          timoni mod push ./${{ needs.parseTag.outputs.module }} \
            oci://ghcr.io/${{ github.repository_owner }}/timoni-${{ needs.parseTag.outputs.module }} \
            --version ${{ needs.parseTag.outputs.version }} \
            --latest \
            -a 'org.opencontainers.image.licenses=Apache-2.0' \
            -a 'org.opencontainers.image.source=https://github.com/${{ github.repository }}' \
            -a 'org.opencontainers.image.description=My Timoni module for ${{ needs.parseTag.outputs.module }}.' \
            --sign=cosign
